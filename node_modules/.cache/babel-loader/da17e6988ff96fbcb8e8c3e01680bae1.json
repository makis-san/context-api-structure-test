{"ast":null,"code":"import { useQuery } from 'react-query';\nimport { api } from '../../service/api';\nexport const queryPokemons = () => {\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const getAll = callBack => {\n    _s();\n\n    const {\n      data,\n      error\n    } = useQuery('pokemons/all', () => api.get(`/pokemon/?limit=500&offset=500`).then(res => res.data), {\n      keepPreviousData: true,\n      onSuccess: res => callBack && callBack(res)\n    });\n    return {\n      data,\n      error\n    };\n  };\n\n  _s(getAll, \"jnKEiAG78WqeE0AS5/bjUCg4uK4=\", false, function () {\n    return [useQuery];\n  });\n\n  const getPaginated = (pageParam, callBack) => {\n    _s2();\n\n    const {\n      data,\n      error\n    } = useQuery('pokemons/paginated', () => api.get(`/pokemon/?limit=20&offset=${20 * pageParam}`).then(res => res.data), {\n      keepPreviousData: true,\n      onSuccess: res => callBack && callBack(res)\n    });\n    return {\n      data,\n      error\n    };\n  };\n\n  _s2(getPaginated, \"jnKEiAG78WqeE0AS5/bjUCg4uK4=\", false, function () {\n    return [useQuery];\n  });\n\n  return {\n    getPaginated,\n    getAll\n  };\n};","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/hooks/query/queryPokemons.ts"],"names":["useQuery","api","queryPokemons","getAll","callBack","data","error","get","then","res","keepPreviousData","onSuccess","getPaginated","pageParam"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAT,QAAoB,mBAApB;AAuBA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;AAAA;;AACjC,QAAMC,MAAM,GAAIC,QAAD,IAAkD;AAAA;;AAC/D,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBN,QAAQ,CAC9B,cAD8B,EAE9B,MACEC,GAAG,CACAM,GADH,CAC2B,gCAD3B,EAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAFrB,CAH4B,EAM9B;AACEK,MAAAA,gBAAgB,EAAE,IADpB;AAEEC,MAAAA,SAAS,EAAGF,GAAD,IAASL,QAAQ,IAAIA,QAAQ,CAACK,GAAD;AAF1C,KAN8B,CAAhC;AAYA,WAAO;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACD,GAdD;;AADiC,KAC3BH,MAD2B;AAAA,YAEPH,QAFO;AAAA;;AAiBjC,QAAMY,YAAY,GAAG,CACnBC,SADmB,EAEnBT,QAFmB,KAGhB;AAAA;;AACH,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBN,QAAQ,CAC9B,oBAD8B,EAE9B,MACEC,GAAG,CACAM,GADH,CAC2B,6BAA4B,KAAKM,SAAU,EADtE,EAEGL,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAFrB,CAH4B,EAM9B;AACEK,MAAAA,gBAAgB,EAAE,IADpB;AAEEC,MAAAA,SAAS,EAAGF,GAAD,IAASL,QAAQ,IAAIA,QAAQ,CAACK,GAAD;AAF1C,KAN8B,CAAhC;AAWA,WAAO;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACD,GAhBD;;AAjBiC,MAiB3BM,YAjB2B;AAAA,YAqBPZ,QArBO;AAAA;;AAmCjC,SAAO;AACLY,IAAAA,YADK;AAELT,IAAAA;AAFK,GAAP;AAID,CAvCM","sourcesContent":["import { useQuery } from 'react-query'\nimport { api } from '../../service/api'\n\nexport type ReturnOBJ = {\n  name: string\n  url: string\n}\n\nexport interface PaginatedResponse {\n  count: number\n  next?: string\n  previous?: string\n  results: ReturnOBJ[]\n}\n\nexport type QueryResponse<T> = {\n  data: T | undefined\n  error: unknown\n}\nexport interface QueryPokemonsTypes {\n  getPaginated: (pageParam?: number) => QueryResponse<PaginatedResponse>\n  getAll: () => QueryResponse<ReturnOBJ[]>\n}\n\nexport const queryPokemons = () => {\n  const getAll = (callBack?: (data: PaginatedResponse) => void) => {\n    const { data, error } = useQuery(\n      'pokemons/all',\n      () =>\n        api\n          .get<PaginatedResponse>(`/pokemon/?limit=500&offset=500`)\n          .then((res) => res.data),\n      {\n        keepPreviousData: true,\n        onSuccess: (res) => callBack && callBack(res)\n      }\n    )\n\n    return { data, error }\n  }\n\n  const getPaginated = (\n    pageParam: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => {\n    const { data, error } = useQuery(\n      'pokemons/paginated',\n      () =>\n        api\n          .get<PaginatedResponse>(`/pokemon/?limit=20&offset=${20 * pageParam}`)\n          .then((res) => res.data),\n      {\n        keepPreviousData: true,\n        onSuccess: (res) => callBack && callBack(res)\n      }\n    )\n    return { data, error }\n  }\n\n  return {\n    getPaginated,\n    getAll\n  } as QueryPokemonsTypes\n}\n"]},"metadata":{},"sourceType":"module"}