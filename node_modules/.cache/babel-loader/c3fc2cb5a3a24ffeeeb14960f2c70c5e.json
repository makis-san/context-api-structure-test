{"ast":null,"code":"var _jsxFileName = \"/Users/santiagosouza/poc-context-struct/src/context/Pokemons/PokemonsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport { queryPokemons } from '../../hooks/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonsContext = /*#__PURE__*/createContext({});\nexport const usePokemons = () => {\n  _s();\n\n  return useContext(PokemonsContext);\n};\n\n_s(usePokemons, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const PokemonContextWrapper = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    actions,\n    data\n  } = queryPokemons();\n  const ctxValue = {\n    data,\n    actions\n  };\n  return /*#__PURE__*/_jsxDEV(PokemonsContext.Provider, {\n    value: ctxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = PokemonContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonContextWrapper\");","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/context/Pokemons/PokemonsContext.tsx"],"names":["React","createContext","useContext","queryPokemons","PokemonsContext","usePokemons","PokemonContextWrapper","children","actions","data","ctxValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAGA,MAAMC,eAAe,gBAAGH,aAAa,CAAC,EAAD,CAArC;AAEA,OAAO,MAAMI,WAAW,GAAG;AAAA;;AAAA,SAAMH,UAAU,CAACE,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AACb,OAAO,MAAMC,qBAA+B,GAAG,QAAkB;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBN,aAAa,EAAvC;AAEA,QAAMO,QAA4B,GAAG;AACnCD,IAAAA,IADmC;AAEnCD,IAAAA;AAFmC,GAArC;AAKA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEE,QAAjC;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbM;KAAMD,qB","sourcesContent":["import React, { createContext, useContext } from 'react'\nimport { queryPokemons } from '../../hooks/query'\nimport { QueryPokemonsTypes } from '../../hooks/query/queryPokemons'\n\nconst PokemonsContext = createContext({} as QueryPokemonsTypes)\n\nexport const usePokemons = () => useContext(PokemonsContext)\nexport const PokemonContextWrapper: React.FC = ({ children }) => {\n  const { actions, data } = queryPokemons()\n\n  const ctxValue: QueryPokemonsTypes = {\n    data,\n    actions\n  }\n\n  return (\n    <PokemonsContext.Provider value={ctxValue}>\n      {children}\n    </PokemonsContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}