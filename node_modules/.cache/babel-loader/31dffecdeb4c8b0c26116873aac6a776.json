{"ast":null,"code":"var _jsxFileName = \"/Users/santiagosouza/poc-context-struct/src/views/Home/Home.view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { PokemonBar } from '../../components/PokemonBar';\nimport { PokemonContainer } from '../../components/PokemonContainer';\nimport { usePage } from '../../context/PageContext/PageContext';\nimport { queryPokemons } from '../../hooks/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const {\n    entities,\n    dispatchData\n  } = usePage();\n  const {\n    getAll,\n    getPaginated\n  } = queryPokemons();\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    /*\n      We need to fetch the main used data for the page\n      on the page load.\n       Let start a paginated request in the first page\n    */\n  }, []);\n\n  const handleLoadAll = () => getAll(data => dispatchData('pokemons', data.results));\n\n  const handleLoadPaginated = () => getPaginated(data => dispatchData('pokemons', data.results));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleLoadAll(),\n      children: \"Load All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleLoadAll(),\n      children: \"Load Paginated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PokemonContainer, {\n      children: entities.pokemons && entities.pokemons.map(value => /*#__PURE__*/_jsxDEV(PokemonBar, {\n        children: value.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"tPYbAVXwE6BJuUCqVg9Ic32YRd8=\", false, function () {\n  return [usePage];\n});","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/views/Home/Home.view.tsx"],"names":["React","useEffect","useState","PokemonBar","PokemonContainer","usePage","queryPokemons","entities","dispatchData","getAll","getPaginated","page","setPage","handleLoadAll","data","results","handleLoadPaginated","pokemons","map","value","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,kBAAe,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BH,OAAO,EAA1C;AACA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BJ,aAAa,EAA9C;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AAEG,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMY,aAAa,GAAG,MACpBJ,MAAM,CAAEK,IAAD,IAAUN,YAAY,CAAC,UAAD,EAAaM,IAAI,CAACC,OAAlB,CAAvB,CADR;;AAGA,QAAMC,mBAAmB,GAAG,MAC1BN,YAAY,CAAEI,IAAD,IAAUN,YAAY,CAAC,UAAD,EAAaM,IAAI,CAACC,OAAlB,CAAvB,CADd;;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMF,aAAa,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAMA,aAAa,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAQE,QAAC,gBAAD;AAAA,gBACGN,QAAQ,CAACU,QAAT,IACCV,QAAQ,CAACU,QAAT,CAAkBC,GAAlB,CAAuBC,KAAD,iBACpB,QAAC,UAAD;AAAA,kBAAaA,KAAK,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtCD;AAAA,UACqCf,OADrC;AAAA","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { PokemonBar } from '../../components/PokemonBar'\nimport { PokemonContainer } from '../../components/PokemonContainer'\nimport { usePage } from '../../context/PageContext/PageContext'\nimport { queryPokemons } from '../../hooks/query'\n\nexport default () => {\n  const { entities, dispatchData } = usePage()\n  const { getAll, getPaginated } = queryPokemons()\n\n  const [page, setPage] = useState(1)\n\n  useEffect(() => {\n    /*\n      We need to fetch the main used data for the page\n      on the page load.\n\n      Let start a paginated request in the first page\n    */\n  }, [])\n\n  const handleLoadAll = () =>\n    getAll((data) => dispatchData('pokemons', data.results))\n\n  const handleLoadPaginated = () =>\n    getPaginated((data) => dispatchData('pokemons', data.results))\n\n  return (\n    <div>\n      <h1>HOME</h1>\n      <button type='button' onClick={() => handleLoadAll()}>\n        Load All\n      </button>\n      <button type='button' onClick={() => handleLoadAll()}>\n        Load Paginated\n      </button>\n      <PokemonContainer>\n        {entities.pokemons &&\n          entities.pokemons.map((value) => (\n            <PokemonBar>{value.name}</PokemonBar>\n          ))}\n      </PokemonContainer>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}