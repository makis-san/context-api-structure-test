{"ast":null,"code":"var _jsxFileName = \"/Users/santiagosouza/poc-context-struct/src/context/Pokemons/PokemonsContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonsContext = /*#__PURE__*/createContext({});\nexport const usePokemons = () => {\n  _s();\n\n  return useContext(PokemonsContext);\n};\n\n_s(usePokemons, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const PokemonContextWrapper = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [entities, setEntities] = useState({});\n\n  const dispatchData = (entity, data) => {\n    if (entities[entity].length > 0) {\n      return setEntities(cur => ({ ...cur,\n        [entity]: [...entities[entity], ...data]\n      }));\n    }\n\n    return setEntities(cur => ({ ...cur,\n      [entity]: data\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(PokemonsContext.Provider, {\n    value: ctxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PokemonContextWrapper, \"gcwg4WndoEzzkuA/EjbiF4UtqP4=\");\n\n_c = PokemonContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonContextWrapper\");","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/context/Pokemons/PokemonsContext.tsx"],"names":["React","createContext","useContext","useState","PokemonsContext","usePokemons","PokemonContextWrapper","children","entities","setEntities","dispatchData","entity","data","length","cur","ctxValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,aADF,EAGEC,UAHF,EAMEC,QANF,QAOO,OAPP;;AAuBA,MAAMC,eAAe,gBAAGH,aAAa,CAAC,EAAD,CAArC;AAIA,OAAO,MAAMI,WAAW,GAAG;AAAA;;AAAA,SAAMH,UAAU,CAACE,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AACb,OAAO,MAAMC,qBAA+B,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAkB,EAAlB,CAAxC;;AAEA,QAAMO,YAAY,GAAG,CAACC,MAAD,EAAuBC,IAAvB,KAA2C;AAC9D,QAAIJ,QAAQ,CAACG,MAAD,CAAR,CAAiBE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,aAAOJ,WAAW,CAAEK,GAAD,KAAU,EAC3B,GAAGA,GADwB;AAE3B,SAACH,MAAD,GAAU,CAAC,GAAGH,QAAQ,CAACG,MAAD,CAAZ,EAAsB,GAAGC,IAAzB;AAFiB,OAAV,CAAD,CAAlB;AAID;;AACD,WAAOH,WAAW,CAAEK,GAAD,KAAU,EAC3B,GAAGA,GADwB;AAE3B,OAACH,MAAD,GAAUC;AAFiB,KAAV,CAAD,CAAlB;AAID,GAXD;;AAYA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEG,QAAjC;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBM;;IAAMD,qB;;KAAAA,qB","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react'\nimport { queryPokemons } from '../../hooks/query'\nimport { PaginatedResponse, ReturnOBJ } from '../../hooks/query/queryPokemons'\n\ninterface PokemonsContextTypes {\n  paginated: () => {\n    data?: PaginatedResponse\n    actions: {\n      nextPage: () => void\n      previousPage: () => void\n    }\n  }\n  all: () => {\n    data?: ReturnOBJ[]\n  }\n}\nconst PokemonsContext = createContext({} as PokemonsContextTypes)\ndeclare type EntitiesType = 'pokemons' | string\ndeclare type EntitiesOBJType = { [key: EntitiesType]: unknown[] }\n\nexport const usePokemons = () => useContext(PokemonsContext)\nexport const PokemonContextWrapper: React.FC = ({ children }) => {\n  const [entities, setEntities] = useState<EntitiesOBJType>({})\n\n  const dispatchData = (entity: EntitiesType, data: unknown[]) => {\n    if (entities[entity].length > 0) {\n      return setEntities((cur) => ({\n        ...cur,\n        [entity]: [...entities[entity], ...data]\n      }))\n    }\n    return setEntities((cur) => ({\n      ...cur,\n      [entity]: data\n    }))\n  }\n  return (\n    <PokemonsContext.Provider value={ctxValue}>\n      {children}\n    </PokemonsContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}