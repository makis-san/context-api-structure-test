{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useMutation, useQuery } from 'react-query';\nimport { api } from '../../service/api';\nexport const queryPokemons = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const getAll = callBack => {\n    _s();\n\n    const {\n      data,\n      error\n    } = useQuery('pokemons/all', () => api.get(`/pokemon/?limit=500&offset=500`).then(res => res.data), {\n      keepPreviousData: true\n    });\n    return {\n      data,\n      error\n    };\n  };\n\n  _s(getAll, \"jnKEiAG78WqeE0AS5/bjUCg4uK4=\", false, function () {\n    return [useQuery];\n  });\n\n  const paginatedMutation = useMutation('pokemons/paginated', pageParam => api.get(`/pokemon/?limit=20&offset=${20 * pageParam}`).then(res => res.data));\n\n  const getPaginated = (pageParam, callBack) => {\n    return paginatedMutation.mutate(pageParam, {\n      onSuccess: function (res) {\n        if (callBack) callBack(res);\n      }\n    });\n  };\n\n  return {\n    getPaginated,\n    getAll\n  };\n};\n\n_s2(queryPokemons, \"+hoY5K7U03sbf6zCtDVEreef3ic=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/hooks/query/queryPokemons.ts"],"names":["useMutation","useQuery","api","queryPokemons","getAll","callBack","data","error","get","then","res","keepPreviousData","paginatedMutation","pageParam","getPaginated","mutate","onSuccess"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,aAAtC;AACA,SAASC,GAAT,QAAoB,mBAApB;AA4BA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAAA;;AACjC,QAAMC,MAAM,GAAIC,QAAD,IAAkD;AAAA;;AAC/D,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBN,QAAQ,CAC9B,cAD8B,EAE9B,MACEC,GAAG,CACAM,GADH,CAC2B,gCAD3B,EAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAFrB,CAH4B,EAM9B;AACEK,MAAAA,gBAAgB,EAAE;AADpB,KAN8B,CAAhC;AAWA,WAAO;AAAEL,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAP;AACD,GAbD;;AADiC,KAC3BH,MAD2B;AAAA,YAEPH,QAFO;AAAA;;AAgBjC,QAAMW,iBAAiB,GAAGZ,WAAW,CACnC,oBADmC,EAElCa,SAAD,IACEX,GAAG,CACAM,GADH,CAC2B,6BAA4B,KAAKK,SAAU,EADtE,EAEGJ,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAFrB,CAHiC,CAArC;;AAOA,QAAMQ,YAAY,GAAG,CACnBD,SADmB,EAEnBR,QAFmB,KAGhB;AACH,WAAOO,iBAAiB,CAACG,MAAlB,CAAyBF,SAAzB,EAAoC;AACzCG,MAAAA,SAAS,EAAE,UAACN,GAAD,EAAkB;AAC3B,YAAIL,QAAJ,EAAcA,QAAQ,CAACK,GAAD,CAAR;AACf;AAHwC,KAApC,CAAP;AAKD,GATD;;AAWA,SAAO;AACLI,IAAAA,YADK;AAELV,IAAAA;AAFK,GAAP;AAID,CAtCM;;IAAMD,a;UAgBeH,W","sourcesContent":["import { useMutation, useQuery } from 'react-query'\nimport { api } from '../../service/api'\n\nexport type ReturnOBJ = {\n  name: string\n  url: string\n}\n\nexport interface PaginatedResponse {\n  count: number\n  next?: string\n  previous?: string\n  results: ReturnOBJ[]\n}\n\nexport type QueryResponse<T> = {\n  data: T | undefined\n  error: unknown\n}\nexport interface QueryPokemonsTypes {\n  getPaginated: (\n    pageParam?: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => QueryResponse<PaginatedResponse>\n  getAll: (\n    callBack?: (data: PaginatedResponse) => void\n  ) => QueryResponse<ReturnOBJ[]>\n}\n\nexport const queryPokemons = () => {\n  const getAll = (callBack?: (data: PaginatedResponse) => void) => {\n    const { data, error } = useQuery(\n      'pokemons/all',\n      () =>\n        api\n          .get<PaginatedResponse>(`/pokemon/?limit=500&offset=500`)\n          .then((res) => res.data),\n      {\n        keepPreviousData: true\n      }\n    )\n\n    return { data, error }\n  }\n\n  const paginatedMutation = useMutation(\n    'pokemons/paginated',\n    (pageParam: number) =>\n      api\n        .get<PaginatedResponse>(`/pokemon/?limit=20&offset=${20 * pageParam}`)\n        .then((res) => res.data)\n  )\n  const getPaginated = (\n    pageParam: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => {\n    return paginatedMutation.mutate(pageParam, {\n      onSuccess: (res, ...rest) => {\n        if (callBack) callBack(res)\n      }\n    })\n  }\n\n  return {\n    getPaginated,\n    getAll\n  } as QueryPokemonsTypes\n}\n"]},"metadata":{},"sourceType":"module"}