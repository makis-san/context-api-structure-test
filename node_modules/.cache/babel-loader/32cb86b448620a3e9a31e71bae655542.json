{"ast":null,"code":"import{useMutation}from'react-query';import{api}from'../../service/api';export var queryPokemons=function queryPokemons(){var getAllMutation=useMutation('pokemons/all',function(){return api.get(\"/pokemon/?limit=500&offset=500\").then(function(res){return res.data;});});var getAll=function getAll(callBack){var data=getAllMutation.mutate(undefined,{onSuccess:function onSuccess(res){if(callBack)callBack(res);}});return{data:data};};var paginatedMutation=useMutation('pokemons/paginated',function(pageParam){return api.get(\"/pokemon/?limit=20&offset=\".concat(20*pageParam)).then(function(res){return res.data;});});var getPaginated=function getPaginated(pageParam,callBack){var data=paginatedMutation.mutate(pageParam,{onSuccess:function onSuccess(res){if(callBack)callBack(res);}});return{data:data};};return{getPaginated:getPaginated,getAll:getAll};};","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/hooks/query/queryPokemons.ts"],"names":["useMutation","api","queryPokemons","getAllMutation","get","then","res","data","getAll","callBack","mutate","undefined","onSuccess","paginatedMutation","pageParam","getPaginated"],"mappings":"AAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,GAAT,KAAoB,mBAApB,CA4BA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,GAAMC,CAAAA,cAAc,CAAGH,WAAW,CAAC,cAAD,CAAiB,iBACjDC,CAAAA,GAAG,CACAG,GADH,mCAEGC,IAFH,CAEQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EAFR,CADiD,EAAjB,CAAlC,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,QAAD,CAAkD,CAC/D,GAAMF,CAAAA,IAAI,CAAGJ,cAAc,CAACO,MAAf,CAAsBC,SAAtB,CAAiC,CAC5CC,SAAS,CAAE,mBAACN,GAAD,CAAS,CAClB,GAAIG,QAAJ,CAAcA,QAAQ,CAACH,GAAD,CAAR,CACf,CAH2C,CAAjC,CAAb,CAMA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAP,CACD,CARD,CAUA,GAAMM,CAAAA,iBAAiB,CAAGb,WAAW,CACnC,oBADmC,CAEnC,SAACc,SAAD,QACEb,CAAAA,GAAG,CACAG,GADH,qCACuD,GAAKU,SAD5D,GAEGT,IAFH,CAEQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAb,EAFR,CADF,EAFmC,CAArC,CAQA,GAAMQ,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CACnBD,SADmB,CAEnBL,QAFmB,CAGhB,CACH,GAAMF,CAAAA,IAAI,CAAGM,iBAAiB,CAACH,MAAlB,CAAyBI,SAAzB,CAAoC,CAC/CF,SAAS,CAAE,mBAACN,GAAD,CAAS,CAClB,GAAIG,QAAJ,CAAcA,QAAQ,CAACH,GAAD,CAAR,CACf,CAH8C,CAApC,CAAb,CAMA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAP,CACD,CAXD,CAaA,MAAO,CACLQ,YAAY,CAAZA,YADK,CAELP,MAAM,CAANA,MAFK,CAAP,CAID,CAzCM","sourcesContent":["import { useMutation } from 'react-query'\nimport { api } from '../../service/api'\n\nexport type ReturnOBJ = {\n  name: string\n  url: string\n}\n\nexport interface PaginatedResponse {\n  count: number\n  next?: string\n  previous?: string\n  results: ReturnOBJ[]\n}\n\nexport type QueryResponse<T> = {\n  data: T | undefined\n  error: unknown\n}\nexport interface QueryPokemonsTypes {\n  getPaginated: (\n    pageParam?: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => QueryResponse<PaginatedResponse>\n  getAll: (\n    callBack?: (data: PaginatedResponse) => void\n  ) => QueryResponse<ReturnOBJ[]>\n}\n\nexport const queryPokemons = () => {\n  const getAllMutation = useMutation('pokemons/all', () =>\n    api\n      .get<PaginatedResponse>(`/pokemon/?limit=500&offset=500`)\n      .then((res) => res.data)\n  )\n  const getAll = (callBack?: (data: PaginatedResponse) => void) => {\n    const data = getAllMutation.mutate(undefined, {\n      onSuccess: (res) => {\n        if (callBack) callBack(res)\n      }\n    })\n\n    return { data }\n  }\n\n  const paginatedMutation = useMutation(\n    'pokemons/paginated',\n    (pageParam: number) =>\n      api\n        .get<PaginatedResponse>(`/pokemon/?limit=20&offset=${20 * pageParam}`)\n        .then((res) => res.data)\n  )\n\n  const getPaginated = (\n    pageParam: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => {\n    const data = paginatedMutation.mutate(pageParam, {\n      onSuccess: (res) => {\n        if (callBack) callBack(res)\n      }\n    })\n\n    return { data }\n  }\n\n  return {\n    getPaginated,\n    getAll\n  } as QueryPokemonsTypes\n}\n"]},"metadata":{},"sourceType":"module"}