{"ast":null,"code":"var _jsxFileName = \"/Users/santiagosouza/poc-context-struct/src/context/Pokemons/PokemonsContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonsContext = /*#__PURE__*/createContext({});\nexport const usePokemons = () => {\n  _s();\n\n  return useContext(PokemonsContext);\n};\n\n_s(usePokemons, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const PokemonContextWrapper = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const [paginatedData, setPaginated] = useState();\n  const [allData, setAll] = useState([]);\n  const ctxValue = useMemo(() => ({\n    data,\n    actions\n  }), [actions, data]);\n  return /*#__PURE__*/_jsxDEV(PokemonsContext.Provider, {\n    value: ctxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(PokemonContextWrapper, \"D4vyPA2h70iUjNCbWAC5tFsuViQ=\");\n\n_c = PokemonContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonContextWrapper\");","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/context/Pokemons/PokemonsContext.tsx"],"names":["React","createContext","useContext","useMemo","PokemonsContext","usePokemons","PokemonContextWrapper","children","page","setPage","useState","paginatedData","setPaginated","allData","setAll","ctxValue","data","actions"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,OAA3C,QAA0D,OAA1D;;AAQA,MAAMC,eAAe,gBAAGH,aAAa,CAAC,EAAD,CAArC;AAEA,OAAO,MAAMI,WAAW,GAAG;AAAA;;AAAA,SAAMH,UAAU,CAACE,eAAD,CAAhB;AAAA,CAApB;;GAAMC,W;;AACb,OAAO,MAAMC,qBAA+B,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAACC,aAAD,EAAgBC,YAAhB,IAAgCF,QAAQ,EAA9C;AACA,QAAM,CAACG,OAAD,EAAUC,MAAV,IAAoBJ,QAAQ,CAAc,EAAd,CAAlC;AAEA,QAAMK,QAA4B,GAAGZ,OAAO,CAC1C,OAAO;AACLa,IAAAA,IADK;AAELC,IAAAA;AAFK,GAAP,CAD0C,EAK1C,CAACA,OAAD,EAAUD,IAAV,CAL0C,CAA5C;AAQA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAED,QAAjC;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnBM;;IAAMD,qB;;KAAAA,qB","sourcesContent":["import React, { createContext, useContext, useMemo } from 'react'\nimport { queryPokemons } from '../../hooks/query'\nimport {\n  PaginatedResponse,\n  QueryPokemonsTypes,\n  ReturnOBJ\n} from '../../hooks/query/queryPokemons'\n\nconst PokemonsContext = createContext({} as QueryPokemonsTypes)\n\nexport const usePokemons = () => useContext(PokemonsContext)\nexport const PokemonContextWrapper: React.FC = ({ children }) => {\n  const [page, setPage] = useState(1)\n\n  const [paginatedData, setPaginated] = useState<PaginatedResponse>()\n  const [allData, setAll] = useState<ReturnOBJ[]>([])\n\n  const ctxValue: QueryPokemonsTypes = useMemo(\n    () => ({\n      data,\n      actions\n    }),\n    [actions, data]\n  )\n\n  return (\n    <PokemonsContext.Provider value={ctxValue}>\n      {children}\n    </PokemonsContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}