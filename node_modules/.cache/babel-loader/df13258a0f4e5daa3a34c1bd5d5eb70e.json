{"ast":null,"code":"var _jsxFileName = \"/Users/santiagosouza/poc-context-struct/src/views/Home/Home.view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { usePage } from '../../context/PageContext/PageContext';\nimport { queryPokemons } from '../../hooks/query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const {\n    entities,\n    dispatchData\n  } = usePage();\n  const {\n    getPaginated: getPaginatedPokemons\n  } = queryPokemons();\n  useEffect(() => {\n    /*\n      We need to fetch the main used data for the page\n      on the page load.\n       Let start a paginated request in the first page\n    */\n    getPaginatedPokemons(0, data => dispatchData('pokemons'), data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"sMSkyg/K/zzKOCw3ticDa16008U=\", false, function () {\n  return [usePage];\n});","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/views/Home/Home.view.tsx"],"names":["React","useEffect","usePage","queryPokemons","entities","dispatchData","getPaginated","getPaginatedPokemons","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,uCAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;;AAEA,kBAAe,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BH,OAAO,EAA1C;AACA,QAAM;AAAEI,IAAAA,YAAY,EAAEC;AAAhB,MAAyCJ,aAAa,EAA5D;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACJ;AACA;AACA;AACA;AAEIM,IAAAA,oBAAoB,CAAC,CAAD,EAAKC,IAAD,IAAUH,YAAY,CAAC,UAAD,CAA1B,EAAwCG,IAAxC,CAApB;AACD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;AAAA,UACqCN,OADrC;AAAA","sourcesContent":["import React, { useEffect } from 'react'\nimport { usePage } from '../../context/PageContext/PageContext'\nimport { queryPokemons } from '../../hooks/query'\n\nexport default () => {\n  const { entities, dispatchData } = usePage()\n  const { getPaginated: getPaginatedPokemons } = queryPokemons()\n\n  useEffect(() => {\n    /*\n      We need to fetch the main used data for the page\n      on the page load.\n\n      Let start a paginated request in the first page\n    */\n    getPaginatedPokemons(0, (data) => dispatchData('pokemons'), data)\n  }, [])\n  return (\n    <div>\n      <h1>HOME</h1>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}