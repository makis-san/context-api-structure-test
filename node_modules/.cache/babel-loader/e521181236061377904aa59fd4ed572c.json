{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMutation } from 'react-query';\nimport { api } from '../../service/api';\nexport const queryPokemons = () => {\n  _s();\n\n  const getAllMutation = useMutation('pokemons/all', pageParam => api.get(`/pokemon/?limit=500&offset=500`).then(res => res.data));\n\n  const getAll = callBack => {\n    const data = getAllMutation.mutate({\n      onSuccess: res => {\n        if (callBack) callBack(res);\n      }\n    });\n    return {\n      data\n    };\n  };\n\n  const paginatedMutation = useMutation('pokemons/paginated', pageParam => api.get(`/pokemon/?limit=20&offset=${20 * pageParam}`).then(res => res.data));\n\n  const getPaginated = (pageParam, callBack) => {\n    const data = paginatedMutation.mutate(pageParam, {\n      onSuccess: res => {\n        if (callBack) callBack(res);\n      }\n    });\n    return {\n      data\n    };\n  };\n\n  return {\n    getPaginated,\n    getAll\n  };\n};\n\n_s(queryPokemons, \"fs1oVmxwj0BBDYA4QjiMwomqe1c=\", false, function () {\n  return [useMutation, useMutation];\n});","map":{"version":3,"sources":["/Users/santiagosouza/poc-context-struct/src/hooks/query/queryPokemons.ts"],"names":["useMutation","api","queryPokemons","getAllMutation","pageParam","get","then","res","data","getAll","callBack","mutate","onSuccess","paginatedMutation","getPaginated"],"mappings":";;AAAA,SAASA,WAAT,QAAsC,aAAtC;AACA,SAASC,GAAT,QAAoB,mBAApB;AA4BA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAMC,cAAc,GAAGH,WAAW,CAAC,cAAD,EAAkBI,SAAD,IACjDH,GAAG,CACAI,GADH,CAC2B,gCAD3B,EAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAFrB,CADgC,CAAlC;;AAKA,QAAMC,MAAM,GAAIC,QAAD,IAAkD;AAC/D,UAAMF,IAAI,GAAGL,cAAc,CAACQ,MAAf,CAAsB;AACjCC,MAAAA,SAAS,EAAGL,GAAD,IAAS;AAClB,YAAIG,QAAJ,EAAcA,QAAQ,CAACH,GAAD,CAAR;AACf;AAHgC,KAAtB,CAAb;AAMA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD,GARD;;AAUA,QAAMK,iBAAiB,GAAGb,WAAW,CACnC,oBADmC,EAElCI,SAAD,IACEH,GAAG,CACAI,GADH,CAC2B,6BAA4B,KAAKD,SAAU,EADtE,EAEGE,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAFrB,CAHiC,CAArC;;AAQA,QAAMM,YAAY,GAAG,CACnBV,SADmB,EAEnBM,QAFmB,KAGhB;AACH,UAAMF,IAAI,GAAGK,iBAAiB,CAACF,MAAlB,CAAyBP,SAAzB,EAAoC;AAC/CQ,MAAAA,SAAS,EAAGL,GAAD,IAAS;AAClB,YAAIG,QAAJ,EAAcA,QAAQ,CAACH,GAAD,CAAR;AACf;AAH8C,KAApC,CAAb;AAMA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD,GAXD;;AAaA,SAAO;AACLM,IAAAA,YADK;AAELL,IAAAA;AAFK,GAAP;AAID,CAzCM;;GAAMP,a;UACYF,W,EAeGA,W","sourcesContent":["import { useMutation, useQuery } from 'react-query'\nimport { api } from '../../service/api'\n\nexport type ReturnOBJ = {\n  name: string\n  url: string\n}\n\nexport interface PaginatedResponse {\n  count: number\n  next?: string\n  previous?: string\n  results: ReturnOBJ[]\n}\n\nexport type QueryResponse<T> = {\n  data: T | undefined\n  error: unknown\n}\nexport interface QueryPokemonsTypes {\n  getPaginated: (\n    pageParam?: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => QueryResponse<PaginatedResponse>\n  getAll: (\n    callBack?: (data: PaginatedResponse) => void\n  ) => QueryResponse<ReturnOBJ[]>\n}\n\nexport const queryPokemons = () => {\n  const getAllMutation = useMutation('pokemons/all', (pageParam: number) =>\n    api\n      .get<PaginatedResponse>(`/pokemon/?limit=500&offset=500`)\n      .then((res) => res.data)\n  )\n  const getAll = (callBack?: (data: PaginatedResponse) => void) => {\n    const data = getAllMutation.mutate({\n      onSuccess: (res) => {\n        if (callBack) callBack(res)\n      }\n    })\n\n    return { data }\n  }\n\n  const paginatedMutation = useMutation(\n    'pokemons/paginated',\n    (pageParam: number) =>\n      api\n        .get<PaginatedResponse>(`/pokemon/?limit=20&offset=${20 * pageParam}`)\n        .then((res) => res.data)\n  )\n\n  const getPaginated = (\n    pageParam: number,\n    callBack?: (data: PaginatedResponse) => void\n  ) => {\n    const data = paginatedMutation.mutate(pageParam, {\n      onSuccess: (res) => {\n        if (callBack) callBack(res)\n      }\n    })\n\n    return { data }\n  }\n\n  return {\n    getPaginated,\n    getAll\n  } as QueryPokemonsTypes\n}\n"]},"metadata":{},"sourceType":"module"}